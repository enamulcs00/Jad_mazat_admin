{"version":3,"sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/angular-star-rating/esm5/angular-star-rating.js"],"names":[],"mappingskOAknBM;;eAES,AA4Bb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+bAgII;;eAES,AA6Bb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iLAyBI;;KAED,AAOH","file":"angular-star-rating.js","sourcesContent":["import { __extends } from 'tslib';\nimport { Component, EventEmitter, forwardRef, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nvar StarRatingConfig = /** @class */ (function () {\r\n    function StarRatingConfig() {\r\n    }\r\n    return StarRatingConfig;\r\n}());\r\nvar StarRatingUtils = /** @class */ (function () {\r\n    function StarRatingUtils() {\r\n    }\r\n    StarRatingUtils.getStarsArray = function (numOfStars) {\r\n        var stars = [];\r\n        for (var i = 0; i < numOfStars; i++) {\r\n            stars.push(i + 1);\r\n        }\r\n        return stars;\r\n    };\r\n    StarRatingUtils.getHalfStarVisible = function (rating) {\r\n        return Math.abs(rating % 1) > 0;\r\n    };\r\n    StarRatingUtils.getColor = function (rating, numOfStars, staticColor) {\r\n        rating = rating || 0;\r\n        if (staticColor) {\r\n            return staticColor;\r\n        }\r\n        var fractionSize = numOfStars / 3;\r\n        var color = 'default';\r\n        if (rating > 0) {\r\n            color = 'negative';\r\n        }\r\n        if (rating > fractionSize) {\r\n            color = 'ok';\r\n        }\r\n        if (rating > fractionSize * 2) {\r\n            color = 'positive';\r\n        }\r\n        return color;\r\n    };\r\n    StarRatingUtils.isDigitKeyEventCode = function (eventCode) {\r\n        return eventCode.indexOf('Digit') === 0;\r\n    };\r\n    return StarRatingUtils;\r\n}());\r\nvar StarRating = /** @class */ (function () {\r\n    function StarRating(config) {\r\n        this.config = config;\r\n        this.classEmpty = this.config.classEmpty;\r\n        this.classHalf = this.config.classHalf;\r\n        this.classFilled = this.config.classFilled;\r\n        this.pathEmpty = this.config.svgPathEmpty;\r\n        this.pathHalf = this.config.svgPathHalf;\r\n        this.pathFilled = this.config.svgPathFilled;\r\n        if ('getColor' in this.config &&\r\n            typeof this.config.getColor === 'function') {\r\n            this.getColor = this.config.getColor;\r\n        }\r\n        if ('getHalfStarVisible' in this.config &&\r\n            typeof this.config.getHalfStarVisible === 'function') {\r\n            this.getHalfStarVisible = this.config.getHalfStarVisible;\r\n        }\r\n        this.numOfStars = this.config.numOfStars;\r\n        this.rating = 0;\r\n        this.step = 1;\r\n    }\r\n    Object.defineProperty(StarRating.prototype, \"rating\", {\r\n        get: function () {\r\n            return this._rating;\r\n        },\r\n        set: function (value) {\r\n            this.setRating(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"showHalfStars\", {\r\n        get: function () {\r\n            return this._showHalfStars;\r\n        },\r\n        set: function (value) {\r\n            this._showHalfStars = !!value;\r\n            this.setHalfStarVisible();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"id\", {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        set: function (value) {\r\n            this._id = value || '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"focus\", {\r\n        get: function () {\r\n            return this._focus;\r\n        },\r\n        set: function (value) {\r\n            this._focus = !!value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"labelText\", {\r\n        get: function () {\r\n            return this._labelText;\r\n        },\r\n        set: function (value) {\r\n            this._labelText = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"labelPosition\", {\r\n        get: function () {\r\n            return this._labelPosition;\r\n        },\r\n        set: function (value) {\r\n            this._labelPosition = value || this.config.labelPosition;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"labelVisible\", {\r\n        get: function () {\r\n            return this._labelVisible;\r\n        },\r\n        set: function (value) {\r\n            this._labelVisible = !!value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"hoverEnabled\", {\r\n        get: function () {\r\n            return this._hoverEnabled;\r\n        },\r\n        set: function (value) {\r\n            this._hoverEnabled = value !== undefined ? !!value : false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"staticColor\", {\r\n        get: function () {\r\n            return this._staticColor || this.config.staticColor || undefined;\r\n        },\r\n        set: function (value) {\r\n            this._staticColor = value;\r\n            this.setColor();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"direction\", {\r\n        get: function () {\r\n            return this._direction;\r\n        },\r\n        set: function (value) {\r\n            this._direction = value || undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"numOfStars\", {\r\n        get: function () {\r\n            return this._numOfStars;\r\n        },\r\n        set: function (value) {\r\n            this._numOfStars = value > 0 ? value : this.config.numOfStars;\r\n            this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\r\n            this.setColor();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"hoverRating\", {\r\n        get: function () {\r\n            return this._hoverRating;\r\n        },\r\n        set: function (value) {\r\n            this._hoverRating = value > 0 ? value : 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"speed\", {\r\n        get: function () {\r\n            return this._speed;\r\n        },\r\n        set: function (value) {\r\n            this._speed = value || this.config.speed;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size || this.config.size;\r\n        },\r\n        set: function (value) {\r\n            this._size = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"starType\", {\r\n        get: function () {\r\n            return this._starType || this.config.starType;\r\n        },\r\n        set: function (value) {\r\n            this._starType = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"space\", {\r\n        get: function () {\r\n            return this._space;\r\n        },\r\n        set: function (value) {\r\n            this._space = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"readOnly\", {\r\n        get: function () {\r\n            return this._readOnly;\r\n        },\r\n        set: function (value) {\r\n            this._readOnly = !!value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"disabled\", {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (value) {\r\n            this._disabled = !!value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRating.prototype, \"step\", {\r\n        get: function () {\r\n            return this._step;\r\n        },\r\n        set: function (value) {\r\n            this._step = value > 0 ? value : 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StarRating.prototype.setRating = function (value) {\r\n        var newRating = 0;\r\n        if (value >= 0 && value <= this.numOfStars) {\r\n            newRating = value;\r\n        }\r\n        if (value > this.numOfStars) {\r\n            newRating = this.numOfStars;\r\n        }\r\n        this._rating = newRating;\r\n        this.ratingAsInteger = parseInt(this._rating.toString(), 10);\r\n        this.setHalfStarVisible();\r\n        this.setColor();\r\n    };\r\n    StarRating.prototype.svgVisible = function () {\r\n        return this.starType === 'svg';\r\n    };\r\n    StarRating.prototype.interactionPossible = function () {\r\n        return !this.readOnly && !this.disabled;\r\n    };\r\n    StarRating.prototype.setColor = function (useHoverValue) {\r\n        if (useHoverValue === void 0) { useHoverValue = false; }\r\n        var ratingValue = useHoverValue ? this.hoverRating : this.rating;\r\n        if (typeof this.getColor === 'function') {\r\n            this.color = this.getColor(ratingValue, this.numOfStars, this.staticColor);\r\n        }\r\n        else {\r\n            this.color = StarRatingUtils.getColor(ratingValue, this.numOfStars, this.staticColor);\r\n        }\r\n    };\r\n    StarRating.prototype.setHalfStarVisible = function () {\r\n        if (this.showHalfStars) {\r\n            if (typeof this.getHalfStarVisible === 'function') {\r\n                this.halfStarVisible = this.getHalfStarVisible(this.rating);\r\n            }\r\n            else {\r\n                this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\r\n            }\r\n        }\r\n        else {\r\n            this.halfStarVisible = false;\r\n        }\r\n    };\r\n    StarRating.prototype.getComponentClassNames = function () {\r\n        var classNames = [];\r\n        classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\r\n        classNames.push(this.halfStarVisible ? 'half' : '');\r\n        classNames.push(this.hoverEnabled ? 'hover' : '');\r\n        var hoverRating = this.hoverRating\r\n            ? 'hover-' + this.hoverRating\r\n            : 'hover-0';\r\n        classNames.push(this.hoverEnabled ? hoverRating : '');\r\n        classNames.push(this.space ? 'space-' + this.space : '');\r\n        classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\r\n        classNames.push(this.color ? 'color-' + this.color : '');\r\n        classNames.push(this.starType ? 'star-' + this.starType : '');\r\n        classNames.push(this.speed);\r\n        classNames.push(this.size);\r\n        classNames.push(this.readOnly ? 'read-only' : '');\r\n        classNames.push(this.disabled ? 'disabled' : '');\r\n        classNames.push(this.direction ? 'direction-' + this.direction : '');\r\n        return classNames.join(' ');\r\n    };\r\n    StarRating.prototype.increment = function () {\r\n        var absDiff = Math.abs(this.rating % this.step);\r\n        this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\r\n    };\r\n    StarRating.prototype.decrement = function () {\r\n        var absDiff = Math.abs(this.rating % this.step);\r\n        this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\r\n    };\r\n    StarRating.prototype.reset = function () {\r\n        this.rating = 0;\r\n    };\r\n    return StarRating;\r\n}());\r\nvar StarRatingConfigService = /** @class */ (function () {\r\n    function StarRatingConfigService() {\r\n        this._classEmpty = 'default-star-empty-icon';\r\n        this._classHalf = 'default-star-half-icon';\r\n        this._classFilled = 'default-star-filled-icon';\r\n        this._numOfStars = 5;\r\n        this._size = 'medium';\r\n        this._labelPosition = 'left';\r\n        this._speed = 'noticeable';\r\n        this._starType = 'svg';\r\n        this._assetsPath = 'assets/images/';\r\n        this._svgPath = this.assetsPath + 'star-rating.icons.svg';\r\n        this._svgEmptySymbolId = 'star-empty';\r\n        this._svgHalfSymbolId = 'star-half';\r\n        this._svgFilledSymbolId = 'star-filled';\r\n        this._svgPathEmpty = this.svgPath + '#' + this.svgEmptySymbolId;\r\n        this._svgPathHalf = this.svgPath + '#' + this.svgHalfSymbolId;\r\n        this._svgPathFilled = this.svgPath + '#' + this.svgFilledSymbolId;\r\n    }\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"classEmpty\", {\r\n        get: function () {\r\n            return this._classEmpty;\r\n        },\r\n        set: function (classEmpty) {\r\n            this._classEmpty = classEmpty;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"classHalf\", {\r\n        get: function () {\r\n            return this._classHalf;\r\n        },\r\n        set: function (classHalf) {\r\n            this._classHalf = classHalf;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"classFilled\", {\r\n        get: function () {\r\n            return this._classFilled;\r\n        },\r\n        set: function (classFilled) {\r\n            this._classFilled = classFilled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"numOfStars\", {\r\n        get: function () {\r\n            return this._numOfStars;\r\n        },\r\n        set: function (numOfStars) {\r\n            this._numOfStars = numOfStars;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        set: function (size) {\r\n            this._size = size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"staticColor\", {\r\n        get: function () {\r\n            return this._staticColor;\r\n        },\r\n        set: function (value) {\r\n            this._staticColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"labelPosition\", {\r\n        get: function () {\r\n            return this._labelPosition;\r\n        },\r\n        set: function (labelPosition) {\r\n            this._labelPosition = labelPosition;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"speed\", {\r\n        get: function () {\r\n            return this._speed;\r\n        },\r\n        set: function (speed) {\r\n            this._speed = speed;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"starType\", {\r\n        get: function () {\r\n            return this._starType;\r\n        },\r\n        set: function (starType) {\r\n            this._starType = starType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"assetsPath\", {\r\n        get: function () {\r\n            return this._assetsPath;\r\n        },\r\n        set: function (assetsPath) {\r\n            this._assetsPath = assetsPath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgPath\", {\r\n        get: function () {\r\n            return this._svgPath;\r\n        },\r\n        set: function (svgPath) {\r\n            this._svgPath = svgPath;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgEmptySymbolId\", {\r\n        get: function () {\r\n            return this._svgEmptySymbolId;\r\n        },\r\n        set: function (svgEmptySymbolId) {\r\n            this._svgEmptySymbolId = svgEmptySymbolId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgHalfSymbolId\", {\r\n        get: function () {\r\n            return this._svgHalfSymbolId;\r\n        },\r\n        set: function (svgHalfSymbolId) {\r\n            this._svgHalfSymbolId = svgHalfSymbolId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgFilledSymbolId\", {\r\n        get: function () {\r\n            return this._svgFilledSymbolId;\r\n        },\r\n        set: function (svgFilledSymbolId) {\r\n            this._svgFilledSymbolId = svgFilledSymbolId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgPathEmpty\", {\r\n        get: function () {\r\n            return this._svgPathEmpty;\r\n        },\r\n        set: function (svgPathEmpty) {\r\n            this._svgPathEmpty = svgPathEmpty;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgPathHalf\", {\r\n        get: function () {\r\n            return this._svgPathHalf;\r\n        },\r\n        set: function (svgPathHalf) {\r\n            this._svgPathHalf = svgPathHalf;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StarRatingConfigService.prototype, \"svgPathFilled\", {\r\n        get: function () {\r\n            return this._svgPathFilled;\r\n        },\r\n        set: function (svgPathFilled) {\r\n            this._svgPathFilled = svgPathFilled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StarRatingConfigService.prototype.getColor = function (rating, numOfStars, staticColor) {\r\n        rating = rating || 0;\r\n        if (staticColor) {\r\n            return staticColor;\r\n        }\r\n        var fractionSize = numOfStars / 3;\r\n        var color = 'default';\r\n        if (rating > 0) {\r\n            color = 'negative';\r\n        }\r\n        if (rating > fractionSize) {\r\n            color = 'ok';\r\n        }\r\n        if (rating > fractionSize * 2) {\r\n            color = 'positive';\r\n        }\r\n        return color;\r\n    };\r\n    StarRatingConfigService.prototype.getHalfStarVisible = function (rating) {\r\n        return Math.abs(rating % 1) > 0;\r\n    };\r\n    return StarRatingConfigService;\r\n}());\r\nvar StarRatingComponent = /** @class */ (function (_super) {\r\n    __extends(StarRatingComponent, _super);\r\n    function StarRatingComponent(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.starClickChange = new EventEmitter();\r\n        _this.ratingChange = new EventEmitter();\r\n        _this.hoverRatingChange = new EventEmitter();\r\n        return _this;\r\n    }\r\n    StarRatingComponent.prototype.saveOnClick = function ($event) {\r\n        if (this.starClickChange) {\r\n            this.starClickChange.emit($event);\r\n        }\r\n    };\r\n    StarRatingComponent.prototype.saveOnRatingChange = function ($event) {\r\n        if (this.ratingChange) {\r\n            this.ratingChange.emit($event);\r\n        }\r\n    };\r\n    StarRatingComponent.prototype.saveOnHover = function ($event) {\r\n        if (this.hoverRatingChange) {\r\n            this.hoverRatingChange.emit($event);\r\n        }\r\n    };\r\n    StarRatingComponent.prototype.onKeyDown = function (event) {\r\n        var _this = this;\r\n        if (!this.interactionPossible()) {\r\n            return;\r\n        }\r\n        var handlers = {\r\n            Minus: function () { return _this.decrement(); },\r\n            ArrowDown: function () { return _this.decrement(); },\r\n            ArrowLeft: function () { return _this.decrement(); },\r\n            Plus: function () { return _this.increment(); },\r\n            ArrowRight: function () { return _this.increment(); },\r\n            ArrowUp: function () { return _this.increment(); },\r\n            Backspace: function () { return _this.reset(); },\r\n            Delete: function () { return _this.reset(); },\r\n            Digit0: function () { return _this.reset(); }\r\n        };\r\n        var handleDigits = function (eventCode) {\r\n            var dStr = 'Digit';\r\n            var digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\r\n            _this.rating = digit;\r\n        };\r\n        if (handlers[event['code']] ||\r\n            StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n            if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n                handleDigits(event['code']);\r\n            }\r\n            else {\r\n                handlers[event['code']]();\r\n            }\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n    StarRatingComponent.prototype.onStarHover = function (rating) {\r\n        if (!this.interactionPossible() || !this.hoverEnabled) {\r\n            return;\r\n        }\r\n        this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\r\n        this.setColor(true);\r\n        var $event = { hoverRating: this.hoverRating };\r\n        this.saveOnHover($event);\r\n    };\r\n    StarRatingComponent.prototype.setRating = function (value) {\r\n        var initValue = this.rating;\r\n        _super.prototype.setRating.call(this, value);\r\n        if (initValue !== this.rating) {\r\n            var $event = { rating: this.rating };\r\n            this.saveOnRatingChange($event);\r\n        }\r\n    };\r\n    StarRatingComponent.prototype.onStarClicked = function (rating) {\r\n        if (!this.interactionPossible()) {\r\n            return;\r\n        }\r\n        this.rating = rating;\r\n        var onClickEventObject = {\r\n            rating: this.rating\r\n        };\r\n        this.saveOnClick(onClickEventObject);\r\n    };\r\n    return StarRatingComponent;\r\n}(StarRating));\r\nStarRatingComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'star-rating',\r\n                inputs: [\r\n                    'getHalfStarVisible',\r\n                    'getColor',\r\n                    'showHalfStars',\r\n                    'hoverEnabled',\r\n                    'rating',\r\n                    'step',\r\n                    'disabled',\r\n                    'readOnly',\r\n                    'space',\r\n                    'starType',\r\n                    'size',\r\n                    'speed',\r\n                    'numOfStars',\r\n                    'direction',\r\n                    'staticColor',\r\n                    'labelPosition',\r\n                    'labelText',\r\n                    'id'\r\n                ],\r\n                outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\r\n                styles: [],\r\n                template: \"<div id=\\\"{{id}}\\\"\\n  class=\\\"rating {{getComponentClassNames()}}\\\"\\n  tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\"\\n  (mouseleave)=\\\"onStarHover(0)\\\">\\n    <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n    <div class=\\\"star-container\\\">\\n        <div class=\\\"star\\\"\\n          (mouseenter)=\\\"onStarHover(star)\\\"\\n          *ngFor=\\\"let star of stars\\\"\\n          (click)=\\\"onStarClicked(star)\\\">\\n            <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n            <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n            <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n            <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n            </svg>\\n            <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n            </svg>\\n            <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n            </svg>\\n        </div>\\n    </div>\\n</div>\\n\"\r\n            },] },\r\n];\r\nStarRatingComponent.ctorParameters = function () { return [\r\n    { type: StarRatingConfigService, },\r\n]; };\r\nvar STAR_RATING_CONTROL_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(function () { return StarRatingControlComponent; }),\r\n    multi: true\r\n};\r\nvar StarRatingControlComponent = /** @class */ (function (_super) {\r\n    __extends(StarRatingControlComponent, _super);\r\n    function StarRatingControlComponent(config) {\r\n        var _this = _super.call(this, config) || this;\r\n        _this.starClickChange = new EventEmitter();\r\n        _this.ratingChange = new EventEmitter();\r\n        _this.hoverRatingChange = new EventEmitter();\r\n        _this.onModelChangeRegistered = false;\r\n        _this.onTouchRegistered = false;\r\n        return _this;\r\n    }\r\n    StarRatingControlComponent.prototype.saveOnClick = function ($event) {\r\n        if (this.starClickChange) {\r\n            this.starClickChange.emit($event);\r\n        }\r\n    };\r\n    StarRatingControlComponent.prototype.saveOnRatingChange = function ($event) {\r\n        if (this.ratingChange) {\r\n            this.ratingChange.emit($event);\r\n        }\r\n    };\r\n    StarRatingControlComponent.prototype.saveOnHover = function ($event) {\r\n        if (this.hoverRatingChange) {\r\n            this.hoverRatingChange.emit($event);\r\n        }\r\n    };\r\n    StarRatingControlComponent.prototype.saveOnTouch = function () {\r\n        if (this.onTouchRegistered) {\r\n            this.onTouch();\r\n        }\r\n    };\r\n    StarRatingControlComponent.prototype.saveOnModelChange = function (value) {\r\n        if (this.onModelChangeRegistered) {\r\n            this.onModelChange(value);\r\n        }\r\n    };\r\n    StarRatingControlComponent.prototype.onKeyDown = function (event) {\r\n        var _this = this;\r\n        if (!this.interactionPossible()) {\r\n            return;\r\n        }\r\n        var handlers = {\r\n            Minus: function () { return _this.decrement(); },\r\n            ArrowDown: function () { return _this.decrement(); },\r\n            ArrowLeft: function () { return _this.decrement(); },\r\n            Plus: function () { return _this.increment(); },\r\n            ArrowRight: function () { return _this.increment(); },\r\n            ArrowUp: function () { return _this.increment(); },\r\n            Backspace: function () { return _this.reset(); },\r\n            Delete: function () { return _this.reset(); },\r\n            Digit0: function () { return _this.reset(); }\r\n        };\r\n        var handleDigits = function (eventCode) {\r\n            var dStr = 'Digit';\r\n            var digit = parseInt(eventCode.substr(dStr.length, eventCode.length - 1), 10);\r\n            _this.rating = digit;\r\n        };\r\n        if (handlers[event['code']] ||\r\n            StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n            if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n                handleDigits(event['code']);\r\n            }\r\n            else {\r\n                handlers[event['code']]();\r\n            }\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        this.saveOnTouch();\r\n    };\r\n    StarRatingControlComponent.prototype.onBlur = function (event) {\r\n        this.focus = false;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.saveOnTouch();\r\n    };\r\n    StarRatingControlComponent.prototype.onFocus = function (event) {\r\n        this.focus = true;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.saveOnTouch();\r\n    };\r\n    StarRatingControlComponent.prototype.onStarHover = function (rating) {\r\n        if (!this.interactionPossible() || !this.hoverEnabled) {\r\n            return;\r\n        }\r\n        this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\r\n        var $event = { hoverRating: this.hoverRating };\r\n        this.saveOnHover($event);\r\n    };\r\n    StarRatingControlComponent.prototype.writeValue = function (obj) {\r\n        this.rating = obj;\r\n    };\r\n    StarRatingControlComponent.prototype.registerOnChange = function (fn) {\r\n        this.onModelChange = fn;\r\n        this.onModelChangeRegistered = true;\r\n    };\r\n    StarRatingControlComponent.prototype.registerOnTouched = function (fn) {\r\n        this.onTouch = fn;\r\n        this.onTouchRegistered = true;\r\n    };\r\n    StarRatingControlComponent.prototype.setRating = function (value) {\r\n        var initValue = this.rating;\r\n        _super.prototype.setRating.call(this, value);\r\n        if (initValue !== this.rating) {\r\n            var $event = { rating: this.rating };\r\n            this.saveOnRatingChange($event);\r\n            this.saveOnModelChange(this.rating);\r\n        }\r\n    };\r\n    StarRatingControlComponent.prototype.onStarClicked = function (rating) {\r\n        if (!this.interactionPossible()) {\r\n            return;\r\n        }\r\n        this.rating = rating;\r\n        var onClickEventObject = {\r\n            rating: this.rating\r\n        };\r\n        this.saveOnClick(onClickEventObject);\r\n    };\r\n    return StarRatingControlComponent;\r\n}(StarRating));\r\nStarRatingControlComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'star-rating-control',\r\n                providers: [STAR_RATING_CONTROL_ACCESSOR],\r\n                inputs: [\r\n                    'getHalfStarVisible',\r\n                    'getColor',\r\n                    'showHalfStars',\r\n                    'hoverEnabled',\r\n                    'rating',\r\n                    'step',\r\n                    'disabled',\r\n                    'readOnly',\r\n                    'space',\r\n                    'starType',\r\n                    'size',\r\n                    'speed',\r\n                    'numOfStars',\r\n                    'direction',\r\n                    'staticColor',\r\n                    'labelPosition',\r\n                    'labelText',\r\n                    'id'\r\n                ],\r\n                outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\r\n                styles: [],\r\n                template: \"<div id=\\\"{{id}}\\\"\\n  class=\\\"rating {{getComponentClassNames()}}\\\"\\n  tabindex=\\\"0\\\"\\n  (keydown)=\\\"onKeyDown($event)\\\"\\n  (blur)=\\\"onBlur($event)\\\"\\n  (focus)=\\\"onFocus($event)\\\"\\n  (mouseleave)=\\\"onStarHover(0)\\\">\\n    <div *ngIf=\\\"labelText\\\" class=\\\"label-value\\\">{{labelText}}</div>\\n    <div class=\\\"star-container\\\">\\n        <div class=\\\"star\\\"\\n          (mouseenter)=\\\"onStarHover(star)\\\"\\n          *ngFor=\\\"let star of stars\\\"\\n          (click)=\\\"onStarClicked(star)\\\">\\n            <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-empty {{classEmpty}}\\\"></i>\\n            <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-half {{classHalf}}\\\"></i>\\n            <i *ngIf=\\\"!svgVisible()\\\" class=\\\"star-filled {{classFilled}}\\\"></i>\\n            <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-empty\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" [attr.xlink:href]=\\\"pathEmpty\\\"></use>\\n            </svg>\\n            <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-half\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" [attr.xlink:href]=\\\"pathHalf\\\"></use>\\n            </svg>\\n            <svg *ngIf=\\\"svgVisible()\\\" class=\\\"star-filled\\\">\\n                <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" [attr.xlink:href]=\\\"pathFilled\\\"></use>\\n            </svg>\\n        </div>\\n    </div>\\n</div>\\n\"\r\n            },] },\r\n];\r\nStarRatingControlComponent.ctorParameters = function () { return [\r\n    { type: StarRatingConfigService, },\r\n]; };\r\nvar DECLARATIONS = [\r\n    StarRatingComponent,\r\n    StarRatingControlComponent\r\n];\r\nvar EXPORTS = [DECLARATIONS];\r\nvar StarRatingModule = /** @class */ (function () {\r\n    function StarRatingModule() {\r\n    }\r\n    StarRatingModule.forRoot = function () {\r\n        return {\r\n            ngModule: StarRatingModule,\r\n            providers: [\r\n                StarRatingConfigService\r\n            ]\r\n        };\r\n    };\r\n    StarRatingModule.forChild = function () {\r\n        return {\r\n            ngModule: StarRatingModule,\r\n            providers: []\r\n        };\r\n    };\r\n    return StarRatingModule;\r\n}());\r\nStarRatingModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [CommonModule],\r\n                declarations: [DECLARATIONS],\r\n                exports: [EXPORTS]\r\n            },] },\r\n];\r\nStarRatingModule.ctorParameters = function () { return []; };\n\nexport { StarRatingConfig, StarRatingUtils, StarRating, StarRatingConfigService, StarRatingComponent, StarRatingControlComponent, StarRatingModule };\n"]}