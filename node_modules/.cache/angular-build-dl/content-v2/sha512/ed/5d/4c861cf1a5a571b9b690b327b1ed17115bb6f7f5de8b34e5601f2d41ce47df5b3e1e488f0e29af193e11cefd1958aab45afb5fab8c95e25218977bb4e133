{"version":3,"sources":["node_modules/ngx-pagination/dist/ngx-pagination.js"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = /** @class */ (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = /** @class */ (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        var emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate$1([\r\n        Pipe({\r\n            name: 'paginate',\r\n            pure: false\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PaginationService])\r\n    ], PaginatePipe);\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = /** @class */ (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"id\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Number)\r\n    ], PaginationControlsComponent.prototype, \"maxSize\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"directionLinks\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"autoHide\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"responsive\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageChange\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsComponent = __decorate$2([\r\n        Component({\r\n            selector: 'pagination-controls',\r\n            template: DEFAULT_TEMPLATE,\r\n            styles: [DEFAULT_STYLES],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            encapsulation: ViewEncapsulation.None\r\n        })\r\n    ], PaginationControlsComponent);\r\n    return PaginationControlsComponent;\r\n}());\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = /** @class */ (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", String)\r\n    ], PaginationControlsDirective.prototype, \"id\", void 0);\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", Number)\r\n    ], PaginationControlsDirective.prototype, \"maxSize\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageChange\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsDirective = __decorate$3([\r\n        Directive({\r\n            selector: 'pagination-template,[pagination-template]',\r\n            exportAs: 'paginationApi'\r\n        }),\r\n        __metadata$2(\"design:paramtypes\", [PaginationService,\r\n            ChangeDetectorRef])\r\n    ], PaginationControlsDirective);\r\n    return PaginationControlsDirective;\r\n}());\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar NgxPaginationModule = /** @class */ (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule],\r\n            declarations: [\r\n                PaginatePipe,\r\n                PaginationControlsComponent,\r\n                PaginationControlsDirective\r\n            ],\r\n            providers: [PaginationService],\r\n            exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n        })\r\n    ], NgxPaginationModule);\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n"],"sourceRoot":"webpack:///"}