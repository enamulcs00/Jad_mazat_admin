{"version":3,"sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/@angular/material/esm2015/divider.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyBC,wBAgBC;;;;;;;;;;;;;;;;;;;;;;;;CAWD,2BAOC","file":"divider.js","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, NgModule } from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCommonModule } from '@angular/material/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass MatDivider {\r\n    constructor() {\r\n        this._vertical = false;\r\n        this._inset = false;\r\n    }\r\n    /**\r\n     * Whether the divider is vertically aligned.\r\n     * @return {?}\r\n     */\r\n    get vertical() { return this._vertical; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\r\n    /**\r\n     * Whether the divider is an inset divider.\r\n     * @return {?}\r\n     */\r\n    get inset() { return this._inset; }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\r\n}\r\nMatDivider.decorators = [\r\n    { type: Component, args: [{selector: 'mat-divider',\r\n                host: {\r\n                    'role': 'separator',\r\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\r\n                    '[class.mat-divider-vertical]': 'vertical',\r\n                    '[class.mat-divider-horizontal]': '!vertical',\r\n                    '[class.mat-divider-inset]': 'inset',\r\n                    'class': 'mat-divider'\r\n                },\r\n                template: '',\r\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"],\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n            },] },\r\n];\r\nMatDivider.propDecorators = {\r\n    vertical: [{ type: Input }],\r\n    inset: [{ type: Input }]\r\n};\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass MatDividerModule {\r\n}\r\nMatDividerModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [MatCommonModule, CommonModule],\r\n                exports: [MatDivider, MatCommonModule],\r\n                declarations: [MatDivider],\r\n            },] },\r\n];\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\nexport { MatDivider, MatDividerModule };\r\n\r\n"]}