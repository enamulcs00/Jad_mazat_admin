import * as ɵngcc0 from '@angular/core';
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Injectable } from '@angular/core';
import { StorageUtil, isBrowser } from './util';
import * as i0 from "@angular/core";
var StorageService = /** @class */ (function () {
    function StorageService(storage) {
        this.storage = storage;
    }
    StorageService.prototype.get = function (key) {
        return StorageUtil.get(this.storage, key);
    };
    StorageService.prototype.set = function (key, value, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 'd'; }
        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
    };
    /**
     * 删除指定key，如：
     * - `remove('key')` 删除 `key` 键
     * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
     * @param key 键名或正则表达式
     */
    StorageService.prototype.remove = function (key) {
        var _this = this;
        if (typeof key === 'string') {
            StorageUtil.remove(this.storage, key);
            return;
        }
        var index = 0;
        var next = StorageUtil.key(this.storage, index);
        var ls = [];
        while (next) {
            if (key.test(next))
                ls.push(next);
            next = StorageUtil.key(this.storage, ++index);
        }
        ls.forEach(function (v) { return StorageUtil.remove(_this.storage, v); });
    };
    StorageService.prototype.clear = function () {
        this.storage.clear();
    };
    return StorageService;
}());
export { StorageService };
var LocalStorageService = /** @class */ (function (_super) {
    __extends(LocalStorageService, _super);
    function LocalStorageService() {
        return _super.call(this, isBrowser ? localStorage : null) || this;
    }
    LocalStorageService.ngInjectableDef = i0.defineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
    LocalStorageService = __decorate([
        __metadata("design:paramtypes", [])
    ], LocalStorageService);
LocalStorageService.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: LocalStorageService, factory: function LocalStorageService_Factory(t) { return new (t || LocalStorageService)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(LocalStorageService, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null);
    return LocalStorageService;
}(StorageService));
export { LocalStorageService };
var SessionStorageService = /** @class */ (function (_super) {
    __extends(SessionStorageService, _super);
    function SessionStorageService() {
        return _super.call(this, isBrowser ? sessionStorage : null) || this;
    }
    SessionStorageService.ngInjectableDef = i0.defineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
    SessionStorageService = __decorate([
        __metadata("design:paramtypes", [])
    ], SessionStorageService);
SessionStorageService.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: SessionStorageService, factory: function SessionStorageService_Factory(t) { return new (t || SessionStorageService)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(SessionStorageService, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null);
    return SessionStorageService;
}(StorageService));
export { SessionStorageService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInY6L2phZC1hZG1pbi1nby9tYXphdF9hZG1pbl9wYW5lbC9ub2RlX21vZHVsZXMvYW5ndWxhci13ZWItc3RvcmFnZS9lc201L3NyYy9zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7c0NBdUVzQyxBQUNLOzs7Ozs7OzBDQUVmOzs7Ozs7Ozs7O3dDQVVZLEFBQ0c7Ozs7Ozs7MENBRWIiLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XHJcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcclxuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XHJcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xyXG59O1xyXG52YXIgX19tZXRhZGF0YSA9ICh0aGlzICYmIHRoaXMuX19tZXRhZGF0YSkgfHwgZnVuY3Rpb24gKGssIHYpIHtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShrLCB2KTtcclxufTtcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdG9yYWdlVXRpbCwgaXNCcm93c2VyIH0gZnJvbSAnLi91dGlsJztcclxuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxudmFyIFN0b3JhZ2VTZXJ2aWNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gU3RvcmFnZVNlcnZpY2Uoc3RvcmFnZSkge1xyXG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2U7XHJcbiAgICB9XHJcbiAgICBTdG9yYWdlU2VydmljZS5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgIHJldHVybiBTdG9yYWdlVXRpbC5nZXQodGhpcy5zdG9yYWdlLCBrZXkpO1xyXG4gICAgfTtcclxuICAgIFN0b3JhZ2VTZXJ2aWNlLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSwgZXhwaXJlZEF0LCBleHBpcmVkVW5pdCkge1xyXG4gICAgICAgIGlmIChleHBpcmVkQXQgPT09IHZvaWQgMCkgeyBleHBpcmVkQXQgPSAwOyB9XHJcbiAgICAgICAgaWYgKGV4cGlyZWRVbml0ID09PSB2b2lkIDApIHsgZXhwaXJlZFVuaXQgPSAnZCc7IH1cclxuICAgICAgICByZXR1cm4gU3RvcmFnZVV0aWwuc2V0KHRoaXMuc3RvcmFnZSwga2V5LCB2YWx1ZSwgZXhwaXJlZEF0LCBleHBpcmVkVW5pdCk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiDliKDpmaTmjIflrpprZXnvvIzlpoLvvJpcclxuICAgICAqIC0gYHJlbW92ZSgna2V5JylgIOWIoOmZpCBga2V5YCDplK5cclxuICAgICAqIC0gYHJlbW92ZSgvQk1hcF9cXHcrLylgIOaJuemHj+WIoOmZpOaJgOaciSBCTWFwXyDlvIDlpLTnmoTplK5cclxuICAgICAqIEBwYXJhbSBrZXkg6ZSu5ZCN5oiW5q2j5YiZ6KGo6L6+5byPXHJcbiAgICAgKi9cclxuICAgIFN0b3JhZ2VTZXJ2aWNlLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICBpZiAodHlwZW9mIGtleSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgU3RvcmFnZVV0aWwucmVtb3ZlKHRoaXMuc3RvcmFnZSwga2V5KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgaW5kZXggPSAwO1xyXG4gICAgICAgIHZhciBuZXh0ID0gU3RvcmFnZVV0aWwua2V5KHRoaXMuc3RvcmFnZSwgaW5kZXgpO1xyXG4gICAgICAgIHZhciBscyA9IFtdO1xyXG4gICAgICAgIHdoaWxlIChuZXh0KSB7XHJcbiAgICAgICAgICAgIGlmIChrZXkudGVzdChuZXh0KSlcclxuICAgICAgICAgICAgICAgIGxzLnB1c2gobmV4dCk7XHJcbiAgICAgICAgICAgIG5leHQgPSBTdG9yYWdlVXRpbC5rZXkodGhpcy5zdG9yYWdlLCArK2luZGV4KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbHMuZm9yRWFjaChmdW5jdGlvbiAodikgeyByZXR1cm4gU3RvcmFnZVV0aWwucmVtb3ZlKF90aGlzLnN0b3JhZ2UsIHYpOyB9KTtcclxuICAgIH07XHJcbiAgICBTdG9yYWdlU2VydmljZS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5zdG9yYWdlLmNsZWFyKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFN0b3JhZ2VTZXJ2aWNlO1xyXG59KCkpO1xyXG5leHBvcnQgeyBTdG9yYWdlU2VydmljZSB9O1xyXG52YXIgTG9jYWxTdG9yYWdlU2VydmljZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhMb2NhbFN0b3JhZ2VTZXJ2aWNlLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gTG9jYWxTdG9yYWdlU2VydmljZSgpIHtcclxuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgaXNCcm93c2VyID8gbG9jYWxTdG9yYWdlIDogbnVsbCkgfHwgdGhpcztcclxuICAgIH1cclxuICAgIExvY2FsU3RvcmFnZVNlcnZpY2UubmdJbmplY3RhYmxlRGVmID0gaTAuZGVmaW5lSW5qZWN0YWJsZSh7IGZhY3Rvcnk6IGZ1bmN0aW9uIExvY2FsU3RvcmFnZVNlcnZpY2VfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBMb2NhbFN0b3JhZ2VTZXJ2aWNlKCk7IH0sIHRva2VuOiBMb2NhbFN0b3JhZ2VTZXJ2aWNlLCBwcm92aWRlZEluOiBcInJvb3RcIiB9KTtcclxuICAgIExvY2FsU3RvcmFnZVNlcnZpY2UgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLFxyXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcclxuICAgIF0sIExvY2FsU3RvcmFnZVNlcnZpY2UpO1xyXG4gICAgcmV0dXJuIExvY2FsU3RvcmFnZVNlcnZpY2U7XHJcbn0oU3RvcmFnZVNlcnZpY2UpKTtcclxuZXhwb3J0IHsgTG9jYWxTdG9yYWdlU2VydmljZSB9O1xyXG52YXIgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgX19leHRlbmRzKFNlc3Npb25TdG9yYWdlU2VydmljZSwgX3N1cGVyKTtcclxuICAgIGZ1bmN0aW9uIFNlc3Npb25TdG9yYWdlU2VydmljZSgpIHtcclxuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgaXNCcm93c2VyID8gc2Vzc2lvblN0b3JhZ2UgOiBudWxsKSB8fCB0aGlzO1xyXG4gICAgfVxyXG4gICAgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlLm5nSW5qZWN0YWJsZURlZiA9IGkwLmRlZmluZUluamVjdGFibGUoeyBmYWN0b3J5OiBmdW5jdGlvbiBTZXNzaW9uU3RvcmFnZVNlcnZpY2VfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBTZXNzaW9uU3RvcmFnZVNlcnZpY2UoKTsgfSwgdG9rZW46IFNlc3Npb25TdG9yYWdlU2VydmljZSwgcHJvdmlkZWRJbjogXCJyb290XCIgfSk7XHJcbiAgICBTZXNzaW9uU3RvcmFnZVNlcnZpY2UgPSBfX2RlY29yYXRlKFtcclxuICAgICAgICBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pLFxyXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbXSlcclxuICAgIF0sIFNlc3Npb25TdG9yYWdlU2VydmljZSk7XHJcbiAgICByZXR1cm4gU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlO1xyXG59KFN0b3JhZ2VTZXJ2aWNlKSk7XHJcbmV4cG9ydCB7IFNlc3Npb25TdG9yYWdlU2VydmljZSB9O1xyIl19