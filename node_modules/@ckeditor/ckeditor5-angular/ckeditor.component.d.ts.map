{"version":3,"file":"ckeditor.component.d.ts","sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/@ckeditor/ckeditor5-angular/ckeditor.component.d.ts"],"sourcesContent":["/**\r\n * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\nimport { NgZone, EventEmitter, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { CKEditor5 } from './ckeditor';\r\nexport declare class CKEditorComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    /**\r\n     * The reference to the DOM element created by the component.\r\n     */\r\n    private elementRef;\r\n    /**\r\n     * The constructor of the editor to be used for the instance of the component.\r\n     * It can be e.g. the `ClassicEditorBuild`, `InlineEditorBuild` or some custom editor.\r\n     */\r\n    editor?: CKEditor5.EditorConstructor;\r\n    /**\r\n     * The configuration of the editor.\r\n     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\r\n     * to learn more.\r\n     */\r\n    config: CKEditor5.Config;\r\n    /**\r\n     * The initial data of the editor. Useful when not using the ngModel.\r\n     * See https://angular.io/api/forms/NgModel to learn more.\r\n     */\r\n    data: string;\r\n    /**\r\n     * Tag name of the editor component.\r\n     *\r\n     * The default tag is 'div'.\r\n     */\r\n    tagName: string;\r\n    /**\r\n     * The context watchdog.\r\n     */\r\n    watchdog?: CKEditor5.ContextWatchdog;\r\n    /**\r\n     * When set `true`, the editor becomes read-only.\r\n     * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\r\n     * to learn more.\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * Fires when the editor is ready. It corresponds with the `editor#ready`\r\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\r\n     * event.\r\n     */\r\n    ready: EventEmitter<CKEditor5.Editor>;\r\n    /**\r\n     * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\r\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\r\n     * event.\r\n     */\r\n    change: EventEmitter<ChangeEvent>;\r\n    /**\r\n     * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\r\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\r\n     * event.\r\n     */\r\n    blur: EventEmitter<BlurEvent>;\r\n    /**\r\n     * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\r\n     * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\r\n     * event.\r\n     */\r\n    focus: EventEmitter<FocusEvent>;\r\n    /**\r\n     * Fires when the editor component crashes.\r\n     */\r\n    error: EventEmitter<void>;\r\n    /**\r\n     * The instance of the editor created by this component.\r\n     */\r\n    readonly editorInstance: CKEditor5.Editor | null;\r\n    /**\r\n     * The editor watchdog. It is created when the context watchdog is not passed to the component.\r\n     * It keeps the editor running.\r\n     */\r\n    private editorWatchdog?;\r\n    /**\r\n     * If the component is read–only before the editor instance is created, it remembers that state,\r\n     * so the editor can become read–only once it is ready.\r\n     */\r\n    private initiallyDisabled;\r\n    /**\r\n     * An instance of https://angular.io/api/core/NgZone to allow the interaction with the editor\r\n     * withing the Angular event loop.\r\n     */\r\n    private ngZone;\r\n    /**\r\n     * A callback executed when the content of the editor changes. Part of the\r\n     * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\r\n     *\r\n     * Note: Unset unless the component uses the `ngModel`.\r\n     */\r\n    private cvaOnChange?;\r\n    /**\r\n     * A callback executed when the editor has been blurred. Part of the\r\n     * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\r\n     *\r\n     * Note: Unset unless the component uses the `ngModel`.\r\n     */\r\n    private cvaOnTouched?;\r\n    /**\r\n     * Reference to the source element used by the editor.\r\n     */\r\n    private editorElement?;\r\n    /**\r\n     * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\r\n     */\r\n    private isEditorSettingData;\r\n    private id;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone);\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): Promise<void>;\r\n    writeValue(value: string | null): void;\r\n    registerOnChange(callback: (data: string) => void): void;\r\n    registerOnTouched(callback: () => void): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    /**\r\n     * Creates the editor instance, sets initial editor data, then integrates\r\n     * the editor with the Angular component. This method does not use the `editor.setData()`\r\n     * because of the issue in the collaboration mode (#6).\r\n     */\r\n    private attachToWatchdog;\r\n    private getConfig;\r\n    /**\r\n     * Integrates the editor with the component by attaching related event listeners.\r\n     */\r\n    private setUpEditorEvents;\r\n}\r\nexport interface BlurEvent {\r\n    event: CKEditor5.EventInfo<'blur'>;\r\n    editor: CKEditor5.Editor;\r\n}\r\nexport interface FocusEvent {\r\n    event: CKEditor5.EventInfo<'focus'>;\r\n    editor: CKEditor5.Editor;\r\n}\r\nexport interface ChangeEvent {\r\n    event: CKEditor5.EventInfo<'change:data'>;\r\n    editor: CKEditor5.Editor;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;;;;;;;;;;;;;"}