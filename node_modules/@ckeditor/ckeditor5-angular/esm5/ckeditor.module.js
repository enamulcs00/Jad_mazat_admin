/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license Copyright (c) 2003-2020, CKSource - Frederico Knabben. All rights reserved.
 * For licensing, see LICENSE.md.
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { CKEditorComponent } from './ckeditor.component';
import * as ɵngcc0 from '@angular/core';
var CKEditorModule = /** @class */ (function () {
    function CKEditorModule() {
    }
CKEditorModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: CKEditorModule });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(CKEditorModule, { declarations: function () { return [CKEditorComponent]; }, imports: function () { return [FormsModule, CommonModule]; }, exports: function () { return [CKEditorComponent]; } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CKEditorModule, [{
        type: NgModule,
        args: [{
                imports: [FormsModule, CommonModule],
                declarations: [CKEditorComponent],
                exports: [CKEditorComponent]
            }]
    }], function () { return []; }, null);
CKEditorModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function CKEditorModule_Factory(t) { return new (t || CKEditorModule)(); }, imports: [[FormsModule, CommonModule]] });
    return CKEditorModule;
}());
export { CKEditorModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInY6L2phZC1hZG1pbi1nby9tYXphdF9hZG1pbl9wYW5lbC9ub2RlX21vZHVsZXMvQGNrZWRpdG9yL2NrZWRpdG9yNS1hbmd1bGFyL2VzbTUvY2tlZGl0b3IubW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7O0tBRUs7Ozs7Ozs7Ozs7O3dMQU9DIiwiZmlsZSI6ImNrZWRpdG9yLm1vZHVsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcclxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGNvbnN0YW50UHJvcGVydHksZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xyXG4gKi9cclxuLyoqXHJcbiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDIwLCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZC5cclxuICovXHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBDS0VkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vY2tlZGl0b3IuY29tcG9uZW50JztcclxudmFyIENLRWRpdG9yTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQ0tFZGl0b3JNb2R1bGUoKSB7XHJcbiAgICB9XHJcbiAgICBDS0VkaXRvck1vZHVsZS5kZWNvcmF0b3JzID0gW1xyXG4gICAgICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XHJcbiAgICAgICAgICAgICAgICAgICAgaW1wb3J0czogW0Zvcm1zTW9kdWxlLCBDb21tb25Nb2R1bGVdLFxyXG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW0NLRWRpdG9yQ29tcG9uZW50XSxcclxuICAgICAgICAgICAgICAgICAgICBleHBvcnRzOiBbQ0tFZGl0b3JDb21wb25lbnRdXHJcbiAgICAgICAgICAgICAgICB9LF0gfVxyXG4gICAgXTtcclxuICAgIHJldHVybiBDS0VkaXRvck1vZHVsZTtcclxufSgpKTtcclxuZXhwb3J0IHsgQ0tFZGl0b3JNb2R1bGUgfTtcciJdfQ==