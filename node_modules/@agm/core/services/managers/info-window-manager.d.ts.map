{"version":3,"file":"info-window-manager.d.ts","sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/@agm/core/services/managers/info-window-manager.d.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AgmInfoWindow } from '../../directives/info-window';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport { InfoWindowOptions } from '../google-maps-types';\r\nimport { MarkerManager } from './marker-manager';\r\nexport declare class InfoWindowManager {\r\n    private _mapsWrapper;\r\n    private _zone;\r\n    private _markerManager;\r\n    private _infoWindows;\r\n    constructor(_mapsWrapper: GoogleMapsAPIWrapper, _zone: NgZone, _markerManager: MarkerManager);\r\n    deleteInfoWindow(infoWindow: AgmInfoWindow): Promise<void>;\r\n    setPosition(infoWindow: AgmInfoWindow): Promise<void>;\r\n    setZIndex(infoWindow: AgmInfoWindow): Promise<void>;\r\n    open(infoWindow: AgmInfoWindow): Promise<void>;\r\n    close(infoWindow: AgmInfoWindow): Promise<void>;\r\n    setOptions(infoWindow: AgmInfoWindow, options: InfoWindowOptions): Promise<void>;\r\n    addInfoWindow(infoWindow: AgmInfoWindow): void;\r\n    /**\r\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\r\n     */\r\n    createEventObservable<T>(eventName: string, infoWindow: AgmInfoWindow): Observable<T>;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;AAMA;;;;;;;;;;;;;;;;;;AAiBA;"}