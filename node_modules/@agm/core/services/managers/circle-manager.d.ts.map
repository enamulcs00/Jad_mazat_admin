{"version":3,"file":"circle-manager.d.ts","sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/@agm/core/services/managers/circle-manager.d.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AgmCircle } from '../../directives/circle';\r\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\r\nimport * as mapTypes from '../google-maps-types';\r\nexport declare class CircleManager {\r\n    private _apiWrapper;\r\n    private _zone;\r\n    private _circles;\r\n    constructor(_apiWrapper: GoogleMapsAPIWrapper, _zone: NgZone);\r\n    addCircle(circle: AgmCircle): void;\r\n    /**\r\n     * Removes the given circle from the map.\r\n     */\r\n    removeCircle(circle: AgmCircle): Promise<void>;\r\n    setOptions(circle: AgmCircle, options: mapTypes.CircleOptions): Promise<void>;\r\n    getBounds(circle: AgmCircle): Promise<mapTypes.LatLngBounds>;\r\n    getCenter(circle: AgmCircle): Promise<mapTypes.LatLng>;\r\n    getRadius(circle: AgmCircle): Promise<number>;\r\n    setCenter(circle: AgmCircle): Promise<void>;\r\n    setEditable(circle: AgmCircle): Promise<void>;\r\n    setDraggable(circle: AgmCircle): Promise<void>;\r\n    setVisible(circle: AgmCircle): Promise<void>;\r\n    setRadius(circle: AgmCircle): Promise<void>;\r\n    getNativeCircle(circle: AgmCircle): Promise<mapTypes.Circle>;\r\n    createEventObservable<T>(eventName: string, circle: AgmCircle): Observable<T>;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;AAqBA;"}