{"version":3,"file":"data-layer-manager.d.ts","sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/@agm/core/services/managers/data-layer-manager.d.ts"],"sourcesContent":["import { NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AgmDataLayer } from './../../directives/data-layer';\r\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\r\nimport { Data, DataOptions, Feature } from './../google-maps-types';\r\n/**\r\n * Manages all Data Layers for a Google Map instance.\r\n */\r\nexport declare class DataLayerManager {\r\n    private _wrapper;\r\n    private _zone;\r\n    private _layers;\r\n    constructor(_wrapper: GoogleMapsAPIWrapper, _zone: NgZone);\r\n    /**\r\n     * Adds a new Data Layer to the map.\r\n     */\r\n    addDataLayer(layer: AgmDataLayer): void;\r\n    deleteDataLayer(layer: AgmDataLayer): void;\r\n    updateGeoJson(layer: AgmDataLayer, geoJson: Object | string): void;\r\n    setDataOptions(layer: AgmDataLayer, options: DataOptions): void;\r\n    /**\r\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\r\n     */\r\n    createEventObservable<T>(eventName: string, layer: AgmDataLayer): Observable<T>;\r\n    /**\r\n     * Extract features from a geoJson using google.maps Data Class\r\n     * @param d : google.maps.Data class instance\r\n     * @param geoJson : url or geojson object\r\n     */\r\n    getDataFeatures(d: Data, geoJson: Object | string): Promise<Feature[]>;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;AAsBA;"}