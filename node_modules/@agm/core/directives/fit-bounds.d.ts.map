{"version":3,"file":"fit-bounds.d.ts","sources":["v:/jad-admin-go/mazat_admin_panel/node_modules/@agm/core/directives/fit-bounds.d.ts"],"sourcesContent":["import { OnChanges, OnDestroy, OnInit } from '@angular/core';\r\nimport { FitBoundsAccessor, FitBoundsService } from '../services/fit-bounds';\r\n/**\r\n * Adds the given directive to the auto fit bounds feature when the value is true.\r\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\r\n * @example\r\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\r\n */\r\nexport declare class AgmFitBounds implements OnInit, OnDestroy, OnChanges {\r\n    private readonly _fitBoundsAccessor;\r\n    private readonly _fitBoundsService;\r\n    /**\r\n     * If the value is true, the element gets added to the bounds of the map.\r\n     * Default: true.\r\n     */\r\n    agmFitBounds: boolean;\r\n    private _destroyed$;\r\n    private _latestFitBoundsDetails;\r\n    constructor(_fitBoundsAccessor: FitBoundsAccessor, _fitBoundsService: FitBoundsService);\r\n    /**\r\n     * @internal\r\n     */\r\n    ngOnChanges(): void;\r\n    /**\r\n     * @internal\r\n     */\r\n    ngOnInit(): void;\r\n    private _updateBounds;\r\n    /**\r\n     * @internal\r\n     */\r\n    ngOnDestroy(): void;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA;"}